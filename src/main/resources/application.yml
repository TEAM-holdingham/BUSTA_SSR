spring:
  server:
    port: 8080

  thymeleaf:
    enabled: true         # Thymeleaf 템플릿 엔진 사용 활성화
    prefix: classpath:/templates/ # 템플릿 파일의 경로
    suffix: .html         # 템플릿 파일의 확장자
    mode: HTML            # 템플릿 모드 (HTML5, XML, TEXT 등)
    cache: false          # 개발 시에는 캐시를 비활성화하여 변경사항 즉시 반영


#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/test
#    username: root
#    password:  1022
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://svc.sel4.cloudtype.app:31310/test
#    url: jdbc:mariadb://localhost:3306/test
    username: root
    password: 1204

  mvc: # 이부분 추가
    cors:
      allowed-origins: "http://localhost:8080, http://127.0.0.1:8080, https://port-0-busta-lyumntwj5a7765e6.sel4.cloudtype.app"
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  mail:
    host: smtp.gmail.com
    port: 587
    #구글 이메일 아이디
    username:
    # 앱 비번
    password:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  app:
    reset-password-url: http://localhost:8080/reset-password

  profile:
    picture:
      path: /path/to/profile/pictures/




  # 필터 체인 확인을 위해 추가
  logging:
    level:
      org.springframework.security: DEBUG






  # OAuth 로그인
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: Environment Variables로 등록
            client-secret: Environment Variables로 등록
            scope:
              - email
              - profile

          kakao:
            client-id: Environment Variables로 등록
            client-secret: Environment Variables로 등록
            scope:
              - account_email
              - profile_nickname
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-name: Kakao
            client-authentication-method: POST

          naver:
            client-id: Environment Variables로 등록
            client-secret: Environment Variables로 등록
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

          facebook:
            client-id: Environment Variables로 등록
            client-secret: Environment Variables로 등록
            scope:
              - email
              - public_profile

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

